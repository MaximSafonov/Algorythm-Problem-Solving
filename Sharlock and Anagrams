fun sherlockAndAnagrams(s: String): Int {
    var map = mutableMapOf<String, Int>()
    for (i in 0..s.length-1) {
        for (j in i..s.length-1) {
            var char = s.subSequence(i, j+1).toString().toCharArray()
            char.sort()
            var string: String = ""
            for (ch in char) {
                string += ch
            }
            
            if (map.containsKey(string)) {
                map.put(string, map.get(string)!! + 1)
            } else {
                map.put(string, 1)
            }
        }
    }
    
    var anagramPairs = 0
    
    for (item in map.keys) {
        var x = map.get(item)
        anagramPairs += (x!! * (x -1))/2
    }
    
    return anagramPairs
}

fun main(args: Array<String>) {
    val q = readLine()!!.trim().toInt()

    for (qItr in 1..q) {
        val s = readLine()!!

        val result = sherlockAndAnagrams(s)

        println(result)
    }
}
